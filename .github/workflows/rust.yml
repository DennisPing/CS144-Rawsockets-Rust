name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: '0'
  RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
  RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Install Rust (nightly)
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      # Clean workspace
      - name: Clean workspace
        uses: actions-rs/cargo@v1
        with:
          command: clean

      # Build the project
      - name: Build
        run: cargo build --verbose

      # Run tests with coverage flags
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast

      # Use grcov to generate coverage report
      - name: rust-grcov
        uses: actions-rs/grcov@v0.1

      # Upload coverage report to Codecov
      - name: codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          verbose: true
          fail_ci_if_error: true
